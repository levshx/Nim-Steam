{
    "apilist": {
        "interfaces": [
            {
                "name": "IClientStats_1046930",
                "methods": [
                    {
                        "name": "ReportEvent",
                        "version": 1,
                        "httpmethod": "POST",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IGCVersion_1046930",
                "methods": [
                    {
                        "name": "GetClientVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetServerVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IGCVersion_1269260",
                "methods": [
                    {
                        "name": "GetClientVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetServerVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IGCVersion_205790",
                "methods": [
                    {
                        "name": "GetClientVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetServerVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IGCVersion_440",
                "methods": [
                    {
                        "name": "GetClientVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetServerVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IGCVersion_570",
                "methods": [
                    {
                        "name": "GetClientVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetServerVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IGCVersion_583950",
                "methods": [
                    {
                        "name": "GetClientVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetServerVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IGCVersion_730",
                "methods": [
                    {
                        "name": "GetServerVersion",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IPortal2Leaderboards_620",
                "methods": [
                    {
                        "name": "GetBucketizedData",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "leaderboardName",
                                "type": "string",
                                "optional": false,
                                "description": "The leaderboard name to fetch data for."
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamApps",
                "methods": [
                    {
                        "name": "GetAppList",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetAppList",
                        "version": 2,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetSDRConfig",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "AppID of game"
                            }
                        ]
                    },
                    {
                        "name": "GetServersAtAddress",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "addr",
                                "type": "string",
                                "optional": false,
                                "description": "IP or IP:queryport to list"
                            }
                        ]
                    },
                    {
                        "name": "UpToDateCheck",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "AppID of game"
                            },
                            {
                                "name": "version",
                                "type": "uint32",
                                "optional": false,
                                "description": "The installed version of the game"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamBroadcast",
                "methods": [
                    {
                        "name": "ViewerHeartbeat",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "steamid",
                                "type": "uint64",
                                "optional": false,
                                "description": "Steam ID of the broadcaster"
                            },
                            {
                                "name": "sessionid",
                                "type": "uint64",
                                "optional": false,
                                "description": "Broadcast Session ID"
                            },
                            {
                                "name": "token",
                                "type": "uint64",
                                "optional": false,
                                "description": "Viewer token"
                            },
                            {
                                "name": "stream",
                                "type": "int32",
                                "optional": true,
                                "description": "video stream representation watching"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamDirectory",
                "methods": [
                    {
                        "name": "GetCMList",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "cellid",
                                "type": "uint32",
                                "optional": false,
                                "description": "Client's Steam cell ID"
                            },
                            {
                                "name": "maxcount",
                                "type": "uint32",
                                "optional": true,
                                "description": "Max number of servers to return"
                            }
                        ]
                    },
                    {
                        "name": "GetCMListForConnect",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "cellid",
                                "type": "uint32",
                                "optional": true,
                                "description": "Client's Steam cell ID, uses IP location if blank"
                            },
                            {
                                "name": "cmtype",
                                "type": "string",
                                "optional": true,
                                "description": "Optional CM type filter"
                            },
                            {
                                "name": "realm",
                                "type": "string",
                                "optional": true,
                                "description": "Optional Steam Realm filter"
                            },
                            {
                                "name": "maxcount",
                                "type": "uint32",
                                "optional": true,
                                "description": "Max number of servers to return"
                            }
                        ]
                    },
                    {
                        "name": "GetSteamPipeDomains",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "ISteamNews",
                "methods": [
                    {
                        "name": "GetNewsForApp",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "AppID to retrieve news for"
                            },
                            {
                                "name": "maxlength",
                                "type": "uint32",
                                "optional": true,
                                "description": "Maximum length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit."
                            },
                            {
                                "name": "enddate",
                                "type": "uint32",
                                "optional": true,
                                "description": "Retrieve posts earlier than this date (unix epoch timestamp)"
                            },
                            {
                                "name": "count",
                                "type": "uint32",
                                "optional": true,
                                "description": "# of posts to retrieve (default 20)"
                            },
                            {
                                "name": "tags",
                                "type": "string",
                                "optional": true,
                                "description": "Comma-separated list of tags to filter by (e.g. 'patchnodes')"
                            }
                        ]
                    },
                    {
                        "name": "GetNewsForApp",
                        "version": 2,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "AppID to retrieve news for"
                            },
                            {
                                "name": "maxlength",
                                "type": "uint32",
                                "optional": true,
                                "description": "Maximum length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit."
                            },
                            {
                                "name": "enddate",
                                "type": "uint32",
                                "optional": true,
                                "description": "Retrieve posts earlier than this date (unix epoch timestamp)"
                            },
                            {
                                "name": "count",
                                "type": "uint32",
                                "optional": true,
                                "description": "# of posts to retrieve (default 20)"
                            },
                            {
                                "name": "feeds",
                                "type": "string",
                                "optional": true,
                                "description": "Comma-separated list of feed names to return news for"
                            },
                            {
                                "name": "tags",
                                "type": "string",
                                "optional": true,
                                "description": "Comma-separated list of tags to filter by (e.g. 'patchnodes')"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamRemoteStorage",
                "methods": [
                    {
                        "name": "GetCollectionDetails",
                        "version": 1,
                        "httpmethod": "POST",
                        "parameters": [
                            {
                                "name": "collectioncount",
                                "type": "uint32",
                                "optional": false,
                                "description": "Number of collections being requested"
                            },
                            {
                                "name": "publishedfileids[0]",
                                "type": "uint64",
                                "optional": false,
                                "description": "collection ids to get the details for"
                            }
                        ]
                    },
                    {
                        "name": "GetPublishedFileDetails",
                        "version": 1,
                        "httpmethod": "POST",
                        "parameters": [
                            {
                                "name": "itemcount",
                                "type": "uint32",
                                "optional": false,
                                "description": "Number of items being requested"
                            },
                            {
                                "name": "publishedfileids[0]",
                                "type": "uint64",
                                "optional": false,
                                "description": "published file id to look up"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamUserAuth",
                "methods": [
                    {
                        "name": "AuthenticateUser",
                        "version": 1,
                        "httpmethod": "POST",
                        "parameters": [
                            {
                                "name": "steamid",
                                "type": "uint64",
                                "optional": false,
                                "description": "Should be the users steamid, unencrypted."
                            },
                            {
                                "name": "sessionkey",
                                "type": "rawbinary",
                                "optional": false,
                                "description": "Should be a 32 byte random blob of data, which is then encrypted with RSA using the Steam system's public key.  Randomness is important here for security."
                            },
                            {
                                "name": "encrypted_loginkey",
                                "type": "rawbinary",
                                "optional": false,
                                "description": "Should be the users hashed loginkey, AES encrypted with the sessionkey."
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamUserOAuth",
                "methods": [
                    {
                        "name": "GetTokenDetails",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "access_token",
                                "type": "string",
                                "optional": false,
                                "description": "OAuth2 token for which to return details"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamUserStats",
                "methods": [
                    {
                        "name": "GetGlobalAchievementPercentagesForApp",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "gameid",
                                "type": "uint64",
                                "optional": false,
                                "description": "GameID to retrieve the achievement percentages for"
                            }
                        ]
                    },
                    {
                        "name": "GetGlobalAchievementPercentagesForApp",
                        "version": 2,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "gameid",
                                "type": "uint64",
                                "optional": false,
                                "description": "GameID to retrieve the achievement percentages for"
                            }
                        ]
                    },
                    {
                        "name": "GetGlobalStatsForGame",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "AppID that we're getting global stats for"
                            },
                            {
                                "name": "count",
                                "type": "uint32",
                                "optional": false,
                                "description": "Number of stats get data for"
                            },
                            {
                                "name": "name[0]",
                                "type": "string",
                                "optional": false,
                                "description": "Names of stat to get data for"
                            },
                            {
                                "name": "startdate",
                                "type": "uint32",
                                "optional": true,
                                "description": "Start date for daily totals (unix epoch timestamp)"
                            },
                            {
                                "name": "enddate",
                                "type": "uint32",
                                "optional": true,
                                "description": "End date for daily totals (unix epoch timestamp)"
                            }
                        ]
                    },
                    {
                        "name": "GetNumberOfCurrentPlayers",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "AppID that we're getting user count for"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamWebAPIUtil",
                "methods": [
                    {
                        "name": "GetServerInfo",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    },
                    {
                        "name": "GetSupportedAPIList",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "key",
                                "type": "string",
                                "optional": true,
                                "description": "access key"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ISteamWebUserPresenceOAuth",
                "methods": [
                    {
                        "name": "PollStatus",
                        "version": 1,
                        "httpmethod": "POST",
                        "parameters": [
                            {
                                "name": "steamid",
                                "type": "string",
                                "optional": false,
                                "description": "Steam ID of the user"
                            },
                            {
                                "name": "umqid",
                                "type": "uint64",
                                "optional": false,
                                "description": "UMQ Session ID"
                            },
                            {
                                "name": "message",
                                "type": "uint32",
                                "optional": false,
                                "description": "Message that was last known to the user"
                            },
                            {
                                "name": "pollid",
                                "type": "uint32",
                                "optional": true,
                                "description": "Caller-specific poll id"
                            },
                            {
                                "name": "sectimeout",
                                "type": "uint32",
                                "optional": true,
                                "description": "Long-poll timeout in seconds"
                            },
                            {
                                "name": "secidletime",
                                "type": "uint32",
                                "optional": true,
                                "description": "How many seconds is client considering itself idle, e.g. screen is off"
                            },
                            {
                                "name": "use_accountids",
                                "type": "uint32",
                                "optional": true,
                                "description": "Boolean, 0 (default): return steamid_from in output, 1: return accountid_from"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "ITFSystem_440",
                "methods": [
                    {
                        "name": "GetWorldStatus",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": []
                    }
                ]
            },
            {
                "name": "IBroadcastService",
                "methods": [
                    {
                        "name": "PostGameDataFrameRTMP",
                        "version": 1,
                        "httpmethod": "POST",
                        "description": "Add a game meta data frame to broadcast from a client. Uses RTMP token for validation",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "AppID of the game being broadcasted"
                            },
                            {
                                "name": "steamid",
                                "type": "uint64",
                                "optional": false,
                                "description": "Broadcasters SteamID"
                            },
                            {
                                "name": "rtmp_token",
                                "type": "string",
                                "optional": false,
                                "description": "Valid RTMP token for the Broadcaster"
                            },
                            {
                                "name": "frame_data",
                                "type": "string",
                                "optional": false,
                                "description": "game data frame expressing current state of game (string, zipped, whatever)"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "IContentServerDirectoryService",
                "methods": [
                    {
                        "name": "GetServersForSteamPipe",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "cell_id",
                                "type": "uint32",
                                "optional": false,
                                "description": "client Cell ID"
                            },
                            {
                                "name": "max_servers",
                                "type": "uint32",
                                "optional": true,
                                "description": "max servers in response list"
                            },
                            {
                                "name": "ip_override",
                                "type": "string",
                                "optional": true,
                                "description": "client IP address"
                            },
                            {
                                "name": "launcher_type",
                                "type": "int32",
                                "optional": true,
                                "description": "launcher type"
                            },
                            {
                                "name": "ipv6_public",
                                "type": "string",
                                "optional": true,
                                "description": "client public ipv6 address if it knows it"
                            }
                        ]
                    },
                    {
                        "name": "GetClientUpdateHosts",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "cached_signature",
                                "type": "string",
                                "optional": false
                            }
                        ]
                    },
                    {
                        "name": "GetDepotPatchInfo",
                        "version": 1,
                        "httpmethod": "GET",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false
                            },
                            {
                                "name": "depotid",
                                "type": "uint32",
                                "optional": false
                            },
                            {
                                "name": "source_manifestid",
                                "type": "uint64",
                                "optional": false
                            },
                            {
                                "name": "target_manifestid",
                                "type": "uint64",
                                "optional": false
                            }
                        ]
                    }
                ]
            },
            {
                "name": "IPublishedFileService",
                "methods": [
                    {
                        "name": "GetUserVoteSummary",
                        "version": 1,
                        "httpmethod": "GET",
                        "description": "Get user vote summary",
                        "parameters": [
                            {
                                "name": "publishedfileids",
                                "type": "uint64",
                                "optional": false
                            }
                        ]
                    }
                ]
            },
            {
                "name": "IPlayerService",
                "methods": [
                    {
                        "name": "RecordOfflinePlaytime",
                        "version": 1,
                        "httpmethod": "POST",
                        "description": "Tracks playtime for a user when they are offline",
                        "parameters": [
                            {
                                "name": "steamid",
                                "type": "uint64",
                                "optional": false
                            },
                            {
                                "name": "ticket",
                                "type": "string",
                                "optional": false
                            },
                            {
                                "name": "play_sessions",
                                "type": "{message}",
                                "optional": false
                            }
                        ]
                    }
                ]
            },
            {
                "name": "IGameNotificationsService",
                "methods": [
                    {
                        "name": "UserCreateSession",
                        "version": 1,
                        "httpmethod": "POST",
                        "description": "Creates an async game session",
                        "parameters": [
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "The appid to create the session for."
                            },
                            {
                                "name": "context",
                                "type": "uint64",
                                "optional": false,
                                "description": "Game-specified context value the game can used to associate the session with some object on their backend."
                            },
                            {
                                "name": "title",
                                "type": "{message}",
                                "optional": false,
                                "description": "The title of the session to be displayed within each user's list of sessions."
                            },
                            {
                                "name": "users",
                                "type": "{message}",
                                "optional": false,
                                "description": "The initial state of all users in the session."
                            },
                            {
                                "name": "steamid",
                                "type": "uint64",
                                "optional": false,
                                "description": "(Optional) steamid to make the request on behalf of -- if specified, the user must be in the session and all users being added to the session must be friends with the user."
                            }
                        ]
                    },
                    {
                        "name": "UserUpdateSession",
                        "version": 1,
                        "httpmethod": "POST",
                        "description": "Updates an async game session",
                        "parameters": [
                            {
                                "name": "sessionid",
                                "type": "uint64",
                                "optional": false,
                                "description": "The sessionid to update."
                            },
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "The appid of the session to update."
                            },
                            {
                                "name": "title",
                                "type": "{message}",
                                "optional": false,
                                "description": "(Optional) The new title of the session.  If not specified, the title will not be changed."
                            },
                            {
                                "name": "users",
                                "type": "{message}",
                                "optional": false,
                                "description": "(Optional) A list of users whose state will be updated to reflect the given state. If the users are not already in the session, they will be added to it."
                            },
                            {
                                "name": "steamid",
                                "type": "uint64",
                                "optional": false,
                                "description": "(Optional) steamid to make the request on behalf of -- if specified, the user must be in the session and all users being added to the session must be friends with the user."
                            }
                        ]
                    },
                    {
                        "name": "UserDeleteSession",
                        "version": 1,
                        "httpmethod": "POST",
                        "description": "Deletes an async game session",
                        "parameters": [
                            {
                                "name": "sessionid",
                                "type": "uint64",
                                "optional": false,
                                "description": "The sessionid to delete."
                            },
                            {
                                "name": "appid",
                                "type": "uint32",
                                "optional": false,
                                "description": "The appid of the session to delete."
                            },
                            {
                                "name": "steamid",
                                "type": "uint64",
                                "optional": false,
                                "description": "(Optional) steamid to make the request on behalf of -- if specified, the user must be in the session."
                            }
                        ]
                    }
                ]
            }
        ]
    }
}